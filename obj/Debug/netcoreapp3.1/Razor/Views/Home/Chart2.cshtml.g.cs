#pragma checksum "/Users/ujisaori/Documents/02_Code on Github/test-Chart-AspNet-MVC-Csharp/Views/Home/Chart2.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7495ca62d09a9396d163c88c48b94957e2081a9f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Chart2), @"mvc.1.0.view", @"/Views/Home/Chart2.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/Users/ujisaori/Documents/02_Code on Github/test-Chart-AspNet-MVC-Csharp/Views/_ViewImports.cshtml"
using test_Chart_AspNet_MVC_Csharp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/ujisaori/Documents/02_Code on Github/test-Chart-AspNet-MVC-Csharp/Views/_ViewImports.cshtml"
using test_Chart_AspNet_MVC_Csharp.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7495ca62d09a9396d163c88c48b94957e2081a9f", @"/Views/Home/Chart2.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5ab7f94f12db540fb08d7c6743cb037206492467", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Chart2 : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "/Users/ujisaori/Documents/02_Code on Github/test-Chart-AspNet-MVC-Csharp/Views/Home/Chart2.cshtml"
  
    ViewData["Title"] = "Chart2";

#line default
#line hidden
#nullable disable
            WriteLiteral("\n<title>");
#nullable restore
#line 5 "/Users/ujisaori/Documents/02_Code on Github/test-Chart-AspNet-MVC-Csharp/Views/Home/Chart2.cshtml"
  Write(ViewData["Title"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(@" - DemoGoogleChart</title>  
<script type=""text/javascript"" src=""https://www.gstatic.com/charts/loader.js""></script>  
<div id=""chart_div""></div>  
    
<script type=""text/javascript"" >     
    google.charts.load('current', {  
        packages: ['corechart', 'bar']  
    });  
    google.charts.setOnLoadCallback(LoadData);  
    
    function LoadData() {      
        $.ajax({  
            url: '");
#nullable restore
#line 17 "/Users/ujisaori/Documents/02_Code on Github/test-Chart-AspNet-MVC-Csharp/Views/Home/Chart2.cshtml"
             Write(Url.Action("PopulationChart2","Home"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',  
            dataType: ""json"",  
            type: ""GET"",  
            error: function(xhr, status, error) {  
                var err = eval(""("" + xhr.responseText + "")"");  
                toastr.error(err.message);  
            },  
            success: function(data) {  
                PopulationChart(data);                  
                return false;  
            }  
        });  
        return false;  
    }  
  
    function PopulationChart(data) {         
        var dataArray = [  
            [ 'City', '2010 Population', '2000 Population']  
        ];  
        $.each(data, function(i, item) {  
            dataArray.push([item.cityName, parseInt(item.populationYear2010), parseInt(item.populationYear2000)]);  
        });  
        var data = google.visualization.arrayToDataTable(dataArray);  
        var options = {  
            title: 'Population of Largest U.S. Cities',  
            chartArea: {  
                width: '50%'  
            },  
            colors: ['#b0120a', '#f");
            WriteLiteral(@"fab91'],  
            hAxis: {  
                title: 'Total Population',  
                minValue: 0  
            },  
            vAxis: {  
                title: 'City'  
            }  
        };  
        var chart = new google.visualization.BarChart(document.getElementById('chart_div'));          
        chart.draw(data, options);  
        return false;  
    }  
</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
